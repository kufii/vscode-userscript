{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "scopeName": "text.userjs",
  "fileTypes": ["user.js"],
  "injectionSelector": "L:source.js -comment -(string -meta.embedded), L:source.jsx -comment -(string -meta.embedded),  L:source.js.jsx -comment -(string -meta.embedded), L:source.ts -comment -(string -meta.embedded), L:source.tsx -comment -(string -meta.embedded)",
  "patterns": [
    {
      "begin": "//\\s*==UserScript==",
      "beginCaptures": {
        "0": {
          "name": "comment.block.documentation.js"
        }
      },
      "end": "//\\s*==/UserScript==",
      "endCaptures": {
        "0": {
          "name": "comment.block.documentation.js"
        }
      },
      "patterns": [{ "include": "#userscript-header" }]
    }
  ],
  "repository": {
    "userscript-header": {
      "patterns": [
        {
          "match": "^//\\s*((@)(?:name(?::[^\\s]+)?|author|description|nocompat|license|copyright))\\s+(.*)",
          "captures": {
            "0": {
              "name": "comment.block.documentation.js"
            },
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "entity.name.type.instance.jsdoc"
            }
          }
        },
        {
          "match": "^//\\s*((@)grant)\\s+(.*)",
          "captures": {
            "0": {
              "name": "comment.block.documentation.js"
            },
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "comment.block.documentation.js",
              "patterns": [
                {
                  "match": "\\b(?:none|unsafeWindow|window.close|window.focus|GM[_\\.]addStyle|GM[_\\.]deleteValue|adpykeGM[_\\.]listValues|GM[_\\.]addValueChangeListener|GM[_\\.]removeValueChangeListener|GM[_\\.]setValue|GM[_\\.]getValue|GM[_\\.]log|GM[_\\.]getResourceText|GM[_\\.]getResourceURL|GM[_\\.]registerMenuCommand|GM[_\\.]unregisterMenuCommand|GM[_\\.]openInTab|GM_xmlhttpRequest|GM.xmlHttpRequest|GM[_\\.]download|GM[_\\.]getTab|GM[_\\.]saveTab|GM[_\\.]getTabs|GM[_\\.]notification|GM[_\\.]setClipboard|GM[_\\.]info)\\s*$",
                  "name": "constant.language.symbol-type.jsdoc"
                },
                { "match": ".*", "name": "comment.block.documentation.js" }
              ]
            }
          }
        },
        {
          "match": "^//\\s*((@)run-at)\\s+(.*)",
          "captures": {
            "0": {
              "name": "comment.block.documentation.js"
            },
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "comment.block.documentation.js",
              "patterns": [
                {
                  "match": "\\b(?:document-start|document-body|document-end|document-idle|context-menu)\\s*$",
                  "name": "constant.language.symbol-type.jsdoc"
                },
                { "match": ".*", "name": "comment.block.documentation.js" }
              ]
            }
          }
        },
        {
          "match": "^//\\s*((@)inject-into)\\s+(.*)",
          "captures": {
            "0": {
              "name": "comment.block.documentation.js"
            },
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "comment.block.documentation.js",
              "patterns": [
                {
                  "match": "\\b(?:page|content|auto)\\s*$",
                  "name": "constant.language.symbol-type.jsdoc"
                },
                { "match": ".*", "name": "comment.block.documentation.js" }
              ]
            }
          }
        },
        {
          "match": "^//\\s*((@)(?:namespace|homepage|homepageURL|website|source|icon|iconURL|defaulticon|icon64|icon64URL|updateURL|downloadURL|supportURL|require|connect))\\s+(.*)",
          "captures": {
            "0": {
              "name": "comment.block.documentation.js"
            },
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "comment.block.documentation.js",
              "patterns": [
                {
                  "match": "\\b[^\\s]+\\s+[^\\s]+",
                  "name": "comment.block.documentation.js"
                },
                { "match": ".*", "name": "variable.other.link.underline.jsdoc" }
              ]
            }
          }
        },
        {
          "match": "^//\\s*((@)version)\\s+(.*)",
          "captures": {
            "0": {
              "name": "comment.block.documentation.js"
            },
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "comment.block.documentation.js",
              "patterns": [
                {
                  "match": "\\b[^\\s]+\\s+[^\\s]+",
                  "name": "comment.block.documentation.js"
                },
                { "match": ".*", "name": "variable.other.jsdoc" }
              ]
            }
          }
        },
        {
          "match": "^//\\s*((@)(?:include|exclude))\\s+(.*)",
          "captures": {
            "0": {
              "name": "comment.block.documentation.js"
            },
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "patterns": [{ "match": "^/", "include": "source.js#regex" }, { "include": "#glob" }]
            }
          }
        },
        {
          "match": "^//\\s*((@)match)\\s+(.*)",
          "captures": {
            "0": {
              "name": "comment.block.documentation.js"
            },
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "patterns": [{ "include": "#glob" }]
            }
          }
        },
        {
          "match": "^//\\s*((@)resource)\\s+([^\\s]*)\\s+(.*)",
          "captures": {
            "0": {
              "name": "comment.block.documentation.js"
            },
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "constant.language.symbol-type.jsdoc"
            },
            "4": {
              "name": "comment.block.documentation.js",
              "patterns": [
                {
                  "match": "\\b[^\\s]+\\s+[^\\s]+",
                  "name": "comment.block.documentation.js"
                },
                { "match": ".*", "name": "variable.other.link.underline.jsdoc" }
              ]
            }
          }
        },
        {
          "match": "^//\\s*((@)(?:noframes|unwrap))\\s*.*",
          "captures": {
            "0": {
              "name": "comment.block.documentation.js"
            },
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            }
          }
        },
        {
          "match": "^//.*",
          "captures": {
            "0": {
              "name": "comment.block.documentation.js"
            }
          }
        }
      ]
    },
    "glob": {
      "patterns": [
        {
          "match": "\\s*[^\\s]+\\s+[^\\s]+.*",
          "captures": {
            "0": {
              "name": "comment.block.documentation.js"
            }
          }
        },
        {
          "match": "\\*",
          "captures": {
            "0": {
              "name": "keyword.operator.quantifier.regexp"
            }
          }
        },
        {
          "match": "[^\\*]",
          "captures": {
            "0": {
              "name": "string.regexp.js"
            }
          }
        }
      ]
    }
  }
}
